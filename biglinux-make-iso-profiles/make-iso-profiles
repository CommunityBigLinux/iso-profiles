#!/bin/bash

workdir=$PWD
isoprofilesdir=iso-profiles
rootdir=..
mesa=$@
extrarepo=$@
kernel=$@
if [ -n "$(echo $@ | grep -s biglinux )" ];then
    profile=biglinux
elif [ -n "$(echo $@ | grep -s xivastudio )" ];then
    profile=xivastudio
elif [ -n "$(echo $@ | grep -s uai )" ];then
    profile=uai
fi
makeisoprofilesdir=$workdir/$isoprofilesdir/community/$profile

make-iso-profiles () {
    # clone or Update git
    if [ ! -d "$workdir/$isoprofilesdir" ]
    then
        git clone https://gitlab.manjaro.org/profiles-and-settings/iso-profiles.git $workdir/$isoprofilesdir
    else
        cd $workdir/$isoprofilesdir
        git pull
        cd $workdir
    fi

    #remove old profile
    if [ -d "$makeisoprofilesdir" ]; then
        rm -r $makeisoprofilesdir
    fi

    ## create profile biglinux ##
    mkdir -p $makeisoprofilesdir

    #files
    cp $workdir/$profile/profile.conf  $makeisoprofilesdir
    cp $workdir/$profile/pacman-default.conf  $makeisoprofilesdir
    cp $workdir/$profile/user-repos.conf  $makeisoprofilesdir
    #dirs
    cp -r $workdir/$profile/desktop-overlay/  $makeisoprofilesdir
    cp -r $workdir/$profile/root-overlay/  $makeisoprofilesdir
    cp -r $workdir/$profile/live-overlay/  $makeisoprofilesdir

    # Remove Mhwd
    if [ -e "$workdir/$profile/Mhwd-remove" ]; then
        grep -v -f $workdir/$profile/Mhwd-remove  $workdir/$isoprofilesdir/shared/Packages-Mhwd  >  $makeisoprofilesdir/Packages-Mhwd
    else
        echo "ERROR"
        exit 1
    fi

    # Remove Root
    if [ -e "$workdir/$profile/Root-remove" ]; then
        grep -v -f $workdir/$profile/Root-remove  $workdir/$isoprofilesdir/shared/Packages-Root  >  $makeisoprofilesdir/Packages-Root
    else
        echo "ERROR"
        exit 1
    fi

    # Remove Live
    if [ -e "$workdir/$profile/Live-remove" ]; then
        grep -v -f $workdir/$profile/Live-remove  $workdir/$isoprofilesdir/shared/Packages-Live  >  $makeisoprofilesdir/Packages-Live
    else
        echo "ERROR"
        exit 1
    fi

    # Remove Desktop
    if [ -e "$workdir/$profile/Desktop-remove" ]; then
        grep -v -f $workdir/$profile/Desktop-remove  $workdir/$isoprofilesdir/shared/Packages-Desktop  >  $makeisoprofilesdir/Packages-Desktop
    else
        echo "ERROR"
        exit 1
    fi

    # Add Mhwd
    if [ -e "$workdir/$profile/Mhwd-add" ]; then
        cat $workdir/$profile/Mhwd-add  >>  $makeisoprofilesdir/Packages-Mhwd
    else
        echo "ERROR"
        exit 1
    fi


    # Add Root
    if [ -e "$workdir/$profile/Root-add" ]; then
        cat $workdir/$profile/Root-add  >>  $makeisoprofilesdir/Packages-Root
    else
        echo "ERROR"
        exit 1
    fi

    # Add Live
    if [ -e "$workdir/$profile/Live-add" ]; then
    #     echo '' >> $isoprofilesdir/community/biglinux/Packages-Live
        cat $workdir/$profile/Live-add  >>  $makeisoprofilesdir/Packages-Live
    else
        echo "ERROR"
        exit 1
    fi

    # Add Desktop
    if [ -e "$workdir/$profile/Desktop-add" ]; then
        cat  $workdir/$profile/Desktop-add  >  $makeisoprofilesdir/Packages-Desktop
    else
        echo "ERROR"
        exit 1
    fi

    # Add some things from Packages-Desktop
    sed -n '/## Printing/,/^$/p'  $workdir/$isoprofilesdir/manjaro/kde/Packages-Desktop  >>  $makeisoprofilesdir/Packages-Desktop
    sed -n '/## Xorg Server and Graphics/,/^$/p'  $workdir/$isoprofilesdir/manjaro/kde/Packages-Desktop  >>  $makeisoprofilesdir/Packages-Desktop
    sed -n '/## Xorg Input Drivers/,/^$/p'  $workdir/$isoprofilesdir/manjaro/kde/Packages-Desktop  >>  $makeisoprofilesdir/Packages-Desktop
    sed -n '/## Misc/,/^$/p'  $workdir/$isoprofilesdir/manjaro/kde/Packages-Desktop  >>  $makeisoprofilesdir/Packages-Desktop
    sed -i 's|xf86-input-void||g'  $makeisoprofilesdir/Packages-Desktop
    
    # use mesa-amber or mesa-git?
    if [ -n "$(echo $mesa | grep -s amber )" ]; then
        echo '
mesa-amber
lib32-mesa-amber' >> $makeisoprofilesdir/Packages-Root
        echo "using mesa-amber"
    elif [ -n "$(echo $mesa | grep -s mesa-git)" ]; then
        echo '
mesa-tkg-git
lib32-mesa-tkg-git' >> $makeisoprofilesdir/Packages-Root
        echo "using mesa-git"
        sed -i '/libva-mesa/d'  $makeisoprofilesdir/Packages-Desktop
        sed -i '/libva-mesa/d'  $makeisoprofilesdir/Packages-Mhwd
        sed -i '/vulkan-swrast/d'  $makeisoprofilesdir/Packages-Desktop
    fi
    
    if [ -n "$(echo $extrarepo | grep -s testing)" ];then
        sudo cp "$makeisoprofilesdir/root-overlay/etc/pacman.conf" "$makeisoprofilesdir/live-overlay/etc/pacman.conf"
        
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*/\[biglinux-testing\]/;p;x;}' $makeisoprofilesdir/user-repos.conf
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*/\[biglinux-testing\]/;p;x;}' $makeisoprofilesdir/live-overlay/etc/pacman.conf
        
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*/SigLevel = PackageRequired/;p;x;}' $makeisoprofilesdir/user-repos.conf
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*/SigLevel = PackageRequired/;p;x;}' $makeisoprofilesdir/live-overlay/etc/pacman.conf
        
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*/Server = https:\/\/repo.biglinux.com.br\/testing\/$arch/;p;x;}' $makeisoprofilesdir/user-repos.conf
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*/Server = https:\/\/repo.biglinux.com.br\/testing\/$arch/;p;x;}' $makeisoprofilesdir/live-overlay/etc/pacman.conf
        
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*//;p;x;}' $makeisoprofilesdir/user-repos.conf
        sudo sed -i '/\[biglinux-stable\]/{h;s/.*//;p;x;}' $makeisoprofilesdir/live-overlay/etc/pacman.conf
    
#         echo '
#         [biglinux-testing]
#         SigLevel = PackageRequired
#         Server = https://repo.biglinux.com.br/testing/$arch' | sudo tee -a $makeisoprofilesdir/user-repos.conf
    fi

#join desktop in root and clean desktop
# cat $makeisoprofilesdir/Packages-Desktop >> $makeisoprofilesdir/Packages-Root
# echo 'biglinux-apps-rename' > $makeisoprofilesdir/Packages-Desktop
}
    
#move iso-files to root dir
move() {
    cp -a $isoprofilesdir/*  $rootdir
    rm -rf $isoprofilesdir
    for i in $(ls $rootdir/community/ | grep -v $profile); do rm -r $rootdir/community/$i; done
}

#copy iso-files to root dir
copy() {
    cp -a $isoprofilesdir/*  $rootdir
}

config-buildiso () {
    ## changes in /usr/lib/manjaro-tools/  START ##
    if [ -z "$(grep BigLinux /usr/lib/manjaro-tools/util-iso-image.sh)" ];then
        # Remove last } in /usr/lib/manjaro-tools/util-iso-image.sh
        sudo sed -i ':a;$!{N;ba;};s/\(.*\)}/\1/' /usr/lib/manjaro-tools/util-iso-image.sh
        # adicionar ao arquivo /usr/lib/manjaro-tools/util-iso-image.sh
        echo '  #BigLinux clean
            path=$1/usr/share/doc
            if [[ -d $path ]]; then
                rm -Rf $path/* &> /dev/null
            fi

            #BigLinux clean
            path=$1/usr/share/man
            if [[ -d $path ]]; then
                rm -Rf $path/* &> /dev/null
            fi

            #Clean LibreOffice
            path=$1/usr/lib/libreoffice/share/config
            if [[ -d $path ]]; then
            rm -f $path/images_karasa_jaga* &> /dev/null
            rm -f $path/images_elementary* &> /dev/null
            rm -f $path/images_sukapura* &> /dev/null
            rm -f $path/images_colibre_svg.zip &> /dev/null
            rm -f $path/images_sifr_dark_svg.zip &> /dev/null
            rm -f $path/images_sifr_svg.zip &> /dev/null
            rm -f $path/images_breeze_dark_svg.zip &> /dev/null
            rm -f $path/images_breeze_svg.zip &> /dev/null
            fi

            #Clean LibreOffice
            path=$1/usr/share/wallpapers
            if [[ -d $path ]]; then
                rm -Rf $path/Altai
                rm -Rf $path/BytheWater
                rm -Rf $path/Cascade
                rm -Rf $path/ColdRipple
                rm -Rf $path/DarkestHour
                rm -Rf $path/EveningGlow
                rm -Rf $path/Flow
                rm -Rf $path/FlyingKonqui
                rm -Rf $path/IceCold
                rm -Rf $path/Kokkini
                rm -Rf $path/Next
                rm -Rf $path/Opal
                rm -Rf $path/Patak
                rm -Rf $path/SafeLanding
                rm -Rf $path/summer_1am
                rm -Rf $path/Autumn
                rm -Rf $path/Canopee
                rm -Rf $path/Cluster
                rm -Rf $path/ColorfulCups
                rm -Rf $path/Elarun
                rm -Rf $path/FallenLeaf
                rm -Rf $path/Fluent
                rm -Rf $path/Grey
                rm -Rf $path/Kite
                rm -Rf $path/MilkyWay
                rm -Rf $path/OneStandsOut
                rm -Rf $path/PastelHills
                rm -Rf $path/Path
                rm -Rf $path/Shell
                rm -Rf $path/Volna
            fi

            }' | sudo tee -a /usr/lib/manjaro-tools/util-iso-image.sh

    fi
    
    #disable kernel version verification
#     if [ -n "$(echo $kernel | grep -s xanmod )" ]; then
        sudo sed -i '/${iso_kernel}/s/^/#/' /usr/lib/manjaro-tools/util-iso.sh
#     fi
    ## changes in /usr/lib/manjaro-tools/  END ##

    
    # Add root-overlay
    sudo sed -i '/copy_overlay "${profile_dir}\/root-overlay" "${path}"/a [[ -e ${profile_dir}\/root-overlay ]] && copy_overlay "${profile_dir}\/root-overlay" "${path}"' /usr/lib/manjaro-tools/util-iso.sh
    
#     sudo sed -i 's|pacman -S|pacman --overwrite \\* -S|' /usr/lib/manjaro-tools/util-pkg-chroot.sh
#     sudo sed -i 's|pacman -v -S|pacman --overwrite \\* -v -S|' /usr/lib/manjaro-tools/util-iso-image.sh

    
    ## changes in /usr/share/manjaro-tools/  START ##
    #bootsplash
    if [ -z "$(grep bootsplash-$profile /usr/share/manjaro-tools/mkinitcpio.conf)" ]; then
        sudo sed -i "s|keyboard keymap|keyboard keymap bootsplash-$profile|g" /usr/share/manjaro-tools/mkinitcpio.conf
    fi
        
    #add big repository
    if [ -z "$(grep biglinux-update-stable /usr/share/manjaro-tools/pacman-default.conf)" ];then
        sudo sed -i '/\[core\]/{h;s/.*/\[biglinux-update-stable\]/;p;x;}' /usr/share/manjaro-tools/pacman-default.conf
        sudo sed -i '/\[core\]/{h;s/.*/SigLevel = PackageRequired/;p;x;}' /usr/share/manjaro-tools/pacman-default.conf
        sudo sed -i '/\[core\]/{h;s/.*/Server = https:\/\/repo.biglinux.com.br\/update-stable\/$arch/;p;x;}' /usr/share/manjaro-tools/pacman-default.conf
        sudo sed -i '/\[core\]/{h;s/.*//;p;x;}' /usr/share/manjaro-tools/pacman-default.conf
    fi
    if [ -z "$(grep biglinux-stable /usr/share/manjaro-tools/pacman-default.conf)" ];then
        echo '
    [biglinux-stable]
    SigLevel = PackageRequired
    Server = https://repo.biglinux.com.br/stable/$arch' | sudo tee -a /usr/share/manjaro-tools/pacman-default.conf
    fi
    if [ -z "$(grep biglinux-keyring /usr/share/manjaro-tools/pacman-default.conf)" ];then
        sudo sed -i '/SyncFirst/s/$/ biglinux-keyring/' /usr/share/manjaro-tools/pacman-default.conf
    fi
    
    # # Disable remove pkgs cache
    sudo sed -i 's|path=$1/var/lib/pacman/sync|path=$1/usr/share/man|'g /usr/lib/manjaro-tools/util-iso-image.sh
    
    ## changes in /usr/share/manjaro-tools/  END ##
    
    #select folder with isoprofiles
    mkdir -p ~/.config/manjaro-tools/
    echo "run_dir=$workdir/$isoprofilesdir" > ~/.config/manjaro-tools/iso-profiles.conf
    
    # # Faster compression
    if [ -n "$(echo $extrarepo | grep -s testing)" ];then
        sudo sed -i 's|-Xcompression-level 20|-Xcompression-level 6|g' /usr/lib/manjaro-tools/util-iso.sh
    fi
}

#Make backup
backup () {
    sudo cp -a /usr/lib/manjaro-tools  /usr/lib/manjaro-tools-backup
    sudo cp -a /usr/share/manjaro-tools /usr/share/manjaro-tools-backup
}

#Restore Backup
restore-backup () {
    sudo rm -r /usr/lib/manjaro-tools
    sudo mv /usr/lib/manjaro-tools-backup  /usr/lib/manjaro-tools
    sudo rm -r /usr/share/manjaro-tools
    sudo mv /usr/share/manjaro-tools-backup  /usr/share/manjaro-tools
    sudo rm -r ~/.config/manjaro-tools
}

usage()
{
	cat <<-EOF
	Usage: ${0##*/} command [argument]

Commands:

    makeprofiles                  Just generate the iso-profiles files
    ci/cd                         Generate files and settings for CI/CD
    buildlocal branch Kernel      Generate files and settings to run on the local machine
                                  [branchs= stables, testing, unstable]
                                  [kernel= linux510, linux515, linux60, linux-xanmod]
		
	usage example: 
	make-iso-profiles makeprofiles biglinux
	make-iso-profiles ci/cd biglinux
	make-iso-profiles buildlocal biglinux stable linux515 
	  
	EOF
	[ -z "$1" ] && exit 0
	echo
	error_exit "$*"
}

# usage
if [ -z "$1" ]; then
    usage
elif [ -z "$(echo $@ | grep -E "makeprofiles|ci/cd|buildlocal")" ];then
    usage
fi


# runs
if [ -n "$(echo $@ | grep -s makeprofiles )" ]; then
	make-iso-profiles
	move
elif [ -n "$(echo $@ | grep -s buildlocal )" -a -n "$2" -a -n "$3" -a -n "$4" ];then
    backup
    make-iso-profiles
    copy
    config-buildiso
    buildiso -p $2 -b $3 -k ${4}
    restore-backup
elif [ -n "$(echo $@ | grep -s ci/cd )" ];then
    make-iso-profiles
    copy
    config-buildiso
else
	usage
fi


